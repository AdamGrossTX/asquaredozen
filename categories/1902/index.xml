<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1902 on A Square Dozen</title><link>https://www.asquaredozen.com/categories/1902/</link><description>Recent content in 1902 on A Square Dozen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 23 Aug 2019 05:57:11 +0000</lastBuildDate><atom:link href="https://www.asquaredozen.com/categories/1902/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows 10 Feature Updates – Leveraging SetupDiag for Better Reporting</title><link>https://www.asquaredozen.com/2019/08/22/windows-10-feature-updates-leveraging-setupdiag-for-better-reporting/</link><pubDate>Fri, 23 Aug 2019 05:57:11 +0000</pubDate><guid>https://www.asquaredozen.com/2019/08/22/windows-10-feature-updates-leveraging-setupdiag-for-better-reporting/</guid><description>This is the first post of my Windows 10 Feature Updates series, probably totally out of sequence, but I just need to start getting the pieces written and published. So here goes.
What is SetupDiag If you have worked with Windows 10 Operating System Deployments for any amount of time, you&amp;rsquo;ve likely had failures and encountered cryptic messages that you needed to triage. Hopefully you&amp;rsquo;ve come across SetupDiag. For the uninitiated, SetupDiag is a fancy little tool from Microsoft that you can run against the Windows installation logs (Panther Logs) either directly on a client or against an offline copy of the Panther logs from another client.</description></item><item><title>Debugging “Failed to compile rule” client errors after SCCM Application Catalog Role Removal</title><link>https://www.asquaredozen.com/2019/07/10/debugging-failed-to-compile-rule-client-errors-after-sccm-application-catalog-role-removal/</link><pubDate>Wed, 10 Jul 2019 07:06:47 +0000</pubDate><guid>https://www.asquaredozen.com/2019/07/10/debugging-failed-to-compile-rule-client-errors-after-sccm-application-catalog-role-removal/</guid><description>In my post Removing the Application Catalog Role after Upgrading to ConfigMgr 1806 I mentioned the error Failed to compile rule &amp;quot;{Rule_WRC10000}&amp;quot;: 0x8000ffff and that we were unsure of it&amp;rsquo;s impact on the client. The product group assured us that the error was nothing to worry about and they were right - I have seen no ill effects on my clients, even though I continually see this error whenever the clients process machine policies.</description></item><item><title>Building a Smarter Task Sequence</title><link>https://www.asquaredozen.com/2019/04/30/building-a-smarter-task-sequence/</link><pubDate>Tue, 30 Apr 2019 06:41:33 +0000</pubDate><guid>https://www.asquaredozen.com/2019/04/30/building-a-smarter-task-sequence/</guid><description>I&amp;rsquo;m procrastinating prepping my sessions for MMS 2019 and decided I should write a blog post instead to help get me motivated. A few weeks ago I tweeted that my task sequence is built to be re-run if it fails and it will &amp;lsquo;pick up where it left off&amp;rsquo;. Several folks expressed interest in the idea so I wanted to share the general framework for having a task sequence that can be re-run after failure to complete the job.</description></item></channel></rss>