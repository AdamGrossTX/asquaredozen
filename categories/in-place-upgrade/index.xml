<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>In-Place Upgrade on A Square Dozen</title><link>https://www.asquaredozen.com/categories/in-place-upgrade/</link><description>Recent content in In-Place Upgrade on A Square Dozen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Sep 2020 16:54:40 +0000</lastBuildDate><atom:link href="https://www.asquaredozen.com/categories/in-place-upgrade/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows 10 Feature Updates â€“ Testing the /MigNEO Disable Parameter</title><link>https://www.asquaredozen.com/2020/09/13/windows-10-feature-updates-testing-the-migneo-disable-parameter/</link><pubDate>Sun, 13 Sep 2020 16:54:40 +0000</pubDate><guid>https://www.asquaredozen.com/2020/09/13/windows-10-feature-updates-testing-the-migneo-disable-parameter/</guid><description>Over the past few weeks I&amp;rsquo;ve been testing re-writing my Windows 10 Feature Update repo to make it easier to implement - if you haven&amp;rsquo;t tried it, go check it out. Just follow the readme in the repo https://github.com/AdamGrossTX/Windows10FeatureUpdates. During the re-write I was reminded that there were a few command line parameters that I hadn&amp;rsquo;t experimented with. One of them is /MigNEO which only has a Disable option. According to the product group, NEO stands for non-event objective which, doesn&amp;rsquo;t help it make more sense to me.</description></item><item><title>Repairing Invalid Win32_UserProfile WMI Class on Windows 7 to 10 In-Place Upgraded Devices</title><link>https://www.asquaredozen.com/2020/01/19/repairing-invalid-win32-userprofile-wmi-class-on-windows-7-to-10-in-place-upgraded-devices/</link><pubDate>Sun, 19 Jan 2020 21:35:28 +0000</pubDate><guid>https://www.asquaredozen.com/2020/01/19/repairing-invalid-win32-userprofile-wmi-class-on-windows-7-to-10-in-place-upgraded-devices/</guid><description>I recently needed to query the Win32_UserProfile class in WMI for some reporting I was working on. This class is a default Hardware Inventory class in ConfigMgr. I noticed that we had a large number of devices were reporting NULL values for several properties in this class when I queried them in SQL so I decided to investigate. From the ConfigMgr console, I used CMPivot (only one of the best tools ever!</description></item></channel></rss>